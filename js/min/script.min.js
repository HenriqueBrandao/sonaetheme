"use strict";(new WOW).init(),function(e){e(document).ready(function(){e(".navbar-toggle").click(function(){e("#topnavbar").toggleClass("open")}),991<e(window).width()?(e(".nav-item").hover(function(){var t=e(this).attr("data-color");e("#submenu-content").addClass("bg-"+t)},function(){var t=e(this).attr("data-color");e("#submenu-content").removeClass("bg-"+t)}),e(".eixoSide li:nth-of-type(1)").hover(function(){e(".lateralCaptions li:nth-of-type(1)").addClass("visivel")},function(){e(".lateralCaptions li:nth-of-type(1)").removeClass("visivel")}),e(".eixoSide li:nth-of-type(2)").hover(function(){e(".lateralCaptions li:nth-of-type(2)").addClass("visivel")},function(){e(".lateralCaptions li:nth-of-type(2)").removeClass("visivel")}),e(".eixoSide li:nth-of-type(3)").hover(function(){e(".lateralCaptions li:nth-of-type(3)").addClass("visivel")},function(){e(".lateralCaptions li:nth-of-type(3)").removeClass("visivel")}),e(".eixoSide li:nth-of-type(4)").hover(function(){e(".lateralCaptions li:nth-of-type(4)").addClass("visivel")},function(){e(".lateralCaptions li:nth-of-type(4)").removeClass("visivel")}),e(".eixoSide li:nth-of-type(5)").hover(function(){e(".lateralCaptions li:nth-of-type(5)").addClass("visivel")},function(){e(".lateralCaptions li:nth-of-type(5)").removeClass("visivel")}),e(".searchOpen").click(function(t){t.preventDefault(),e(".searchHeader").toggleClass("openSearch")}),e(".closeSearch").click(function(){e(".searchHeader").removeClass("openSearch")})):e("#approach-link .linkOpenApp").click(function(t){t.preventDefault(),e("#submenu-content").toggleClass("openSub"),e("#approach-link").toggleClass("aberto")}),e("#cases-carousel").slick({arrows:!1,dots:!0,infinite:!0});var o=e(".slider-count"),t=e("#stats-carousel");t.on("init reInit afterChange",function(t,e,i,n){currentSlide00=((i||0)+1).toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1}),slideCount00=e.slideCount.toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1}),console.log(currentSlide00+"/"+slideCount00),o.text(currentSlide00+"/"+slideCount00)}),t.slick({arrows:!1,dots:!0,infinite:!0,appendDots:"#slider-nav"}),e(".sidebar").midnight(),e(window).scroll(function(){e(window).scrollTop()+800>e(document).height()-e(window).height()?(e(".backtop").addClass("showbar"),e(".midnightInner").addClass("fade")):(e(".backtop").removeClass("showbar"),e(".midnightInner").removeClass("fade"))}),e(".backtop").click(function(){e("html, body").animate({scrollTop:0},"slow")}),e(".video").parent().click(function(){e(this).children(".video").get(0).paused?(e(this).children(".video").get(0).play(),e(this).children(".playpause").fadeOut()):(e(this).children(".video").get(0).pause(),e(this).children(".playpause").fadeIn())}),e("#videoHome").on("ended",function(){e(this).fadeOut()}),e(".playintro").click(function(){e("#videoHome").fadeIn(),e("#videoHome")[0].play()}),e(".play-block").bind("mousewheel",function(t){t.originalEvent.wheelDelta<0&&(t.preventDefault(),e(this).fadeOut(),e(".fadeInHome").addClass("active"))}),e(".main-block").bind("mousewheel",function(t){0<=t.originalEvent.wheelDelta&&(t.preventDefault(),e(".play-block").fadeIn(),e(".fadeInHome").removeClass("active"))})})}(jQuery),function(){function e(t){if(!t)throw new Error("No options passed to Waypoint constructor");if(!t.element)throw new Error("No element option passed to Waypoint constructor");if(!t.handler)throw new Error("No handler option passed to Waypoint constructor");this.key="waypoint-"+i,this.options=e.Adapter.extend({},e.defaults,t),this.element=this.options.element,this.adapter=new e.Adapter(this.element),this.callback=t.handler,this.axis=this.options.horizontal?"horizontal":"vertical",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=e.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=e.Context.findOrCreateByElement(this.options.context),e.offsetAliases[this.options.offset]&&(this.options.offset=e.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),r[this.key]=this,i+=1}var i=0,r={};e.prototype.queueTrigger=function(t){this.group.queueTrigger(this,t)},e.prototype.trigger=function(t){this.enabled&&this.callback&&this.callback.apply(this,t)},e.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete r[this.key]},e.prototype.disable=function(){return this.enabled=!1,this},e.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},e.prototype.next=function(){return this.group.next(this)},e.prototype.previous=function(){return this.group.previous(this)},e.invokeAll=function(t){var e=[];for(var i in r)e.push(r[i]);for(var n=0,o=e.length;n<o;n++)e[n][t]()},e.destroyAll=function(){e.invokeAll("destroy")},e.disableAll=function(){e.invokeAll("disable")},e.enableAll=function(){e.invokeAll("enable")},e.refreshAll=function(){e.Context.refreshAll()},e.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},e.viewportWidth=function(){return document.documentElement.clientWidth},e.adapters=[],e.defaults={context:window,continuous:!0,enabled:!0,group:"default",horizontal:!1,offset:0},e.offsetAliases={"bottom-in-view":function(){return this.context.innerHeight()-this.adapter.outerHeight()},"right-in-view":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=e}(),function(){function e(t){window.setTimeout(t,1e3/60)}function i(t){this.element=t,this.Adapter=w.Adapter,this.adapter=new this.Adapter(t),this.key="waypoint-context-"+n,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},t.waypointContextKey=this.key,o[t.waypointContextKey]=this,n+=1,this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}var n=0,o={},w=window.Waypoint,t=window.onload;i.prototype.add=function(t){var e=t.options.horizontal?"horizontal":"vertical";this.waypoints[e][t.key]=t,this.refresh()},i.prototype.checkEmpty=function(){var t=this.Adapter.isEmptyObject(this.waypoints.horizontal),e=this.Adapter.isEmptyObject(this.waypoints.vertical);t&&e&&(this.adapter.off(".waypoints"),delete o[this.key])},i.prototype.createThrottledResizeHandler=function(){function t(){e.handleResize(),e.didResize=!1}var e=this;this.adapter.on("resize.waypoints",function(){e.didResize||(e.didResize=!0,w.requestAnimationFrame(t))})},i.prototype.createThrottledScrollHandler=function(){function t(){e.handleScroll(),e.didScroll=!1}var e=this;this.adapter.on("scroll.waypoints",function(){(!e.didScroll||w.isTouch)&&(e.didScroll=!0,w.requestAnimationFrame(t))})},i.prototype.handleResize=function(){w.Context.refreshAll()},i.prototype.handleScroll=function(){var t={},e={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}};for(var i in e){var n=e[i],o=n.newScroll>n.oldScroll?n.forward:n.backward;for(var r in this.waypoints[i]){var a=this.waypoints[i][r],s=n.oldScroll<a.triggerPoint,l=n.newScroll>=a.triggerPoint;(s&&l||!s&&!l)&&(a.queueTrigger(o),t[a.group.id]=a.group)}}for(var u in t)t[u].flushTriggers();this.oldScroll={x:e.horizontal.newScroll,y:e.vertical.newScroll}},i.prototype.innerHeight=function(){return this.element==this.element.window?w.viewportHeight():this.adapter.innerHeight()},i.prototype.remove=function(t){delete this.waypoints[t.axis][t.key],this.checkEmpty()},i.prototype.innerWidth=function(){return this.element==this.element.window?w.viewportWidth():this.adapter.innerWidth()},i.prototype.destroy=function(){var t=[];for(var e in this.waypoints)for(var i in this.waypoints[e])t.push(this.waypoints[e][i]);for(var n=0,o=t.length;n<o;n++)t[n].destroy()},i.prototype.refresh=function(){var t,e=this.element==this.element.window,i=e?void 0:this.adapter.offset(),n={};for(var o in this.handleScroll(),t={horizontal:{contextOffset:e?0:i.left,contextScroll:e?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:e?0:i.top,contextScroll:e?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}}){var r=t[o];for(var a in this.waypoints[o]){var s,l,u,c,p=this.waypoints[o][a],h=p.options.offset,d=p.triggerPoint,f=0,y=null==d;p.element!==p.element.window&&(f=p.adapter.offset()[r.offsetProp]),"function"==typeof h?h=h.apply(p):"string"==typeof h&&(h=parseFloat(h),-1<p.options.offset.indexOf("%")&&(h=Math.ceil(r.contextDimension*h/100))),s=r.contextScroll-r.contextOffset,p.triggerPoint=f+s-h,l=d<r.oldScroll,u=p.triggerPoint>=r.oldScroll,c=!l&&!u,!y&&(l&&u)?(p.queueTrigger(r.backward),n[p.group.id]=p.group):!y&&c?(p.queueTrigger(r.forward),n[p.group.id]=p.group):y&&r.oldScroll>=p.triggerPoint&&(p.queueTrigger(r.forward),n[p.group.id]=p.group)}}return w.requestAnimationFrame(function(){for(var t in n)n[t].flushTriggers()}),this},i.findOrCreateByElement=function(t){return i.findByElement(t)||new i(t)},i.refreshAll=function(){for(var t in o)o[t].refresh()},i.findByElement=function(t){return o[t.waypointContextKey]},window.onload=function(){t&&t(),i.refreshAll()},w.requestAnimationFrame=function(t){(window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||e).call(window,t)},w.Context=i}(),function(){function a(t,e){return t.triggerPoint-e.triggerPoint}function s(t,e){return e.triggerPoint-t.triggerPoint}function e(t){this.name=t.name,this.axis=t.axis,this.id=this.name+"-"+this.axis,this.waypoints=[],this.clearTriggerQueues(),i[this.axis][this.name]=this}var i={vertical:{},horizontal:{}},n=window.Waypoint;e.prototype.add=function(t){this.waypoints.push(t)},e.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},e.prototype.flushTriggers=function(){for(var t in this.triggerQueues){var e=this.triggerQueues[t],i="up"===t||"left"===t;e.sort(i?s:a);for(var n=0,o=e.length;n<o;n+=1){var r=e[n];(r.options.continuous||n===e.length-1)&&r.trigger([t])}}this.clearTriggerQueues()},e.prototype.next=function(t){this.waypoints.sort(a);var e=n.Adapter.inArray(t,this.waypoints);return e===this.waypoints.length-1?null:this.waypoints[e+1]},e.prototype.previous=function(t){this.waypoints.sort(a);var e=n.Adapter.inArray(t,this.waypoints);return e?this.waypoints[e-1]:null},e.prototype.queueTrigger=function(t,e){this.triggerQueues[e].push(t)},e.prototype.remove=function(t){var e=n.Adapter.inArray(t,this.waypoints);-1<e&&this.waypoints.splice(e,1)},e.prototype.first=function(){return this.waypoints[0]},e.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},e.findOrCreate=function(t){return i[t.axis][t.name]||new e(t)},n.Group=e}(),function(){function i(t){this.$element=n(t)}var n=window.jQuery,t=window.Waypoint;n.each(["innerHeight","innerWidth","off","offset","on","outerHeight","outerWidth","scrollLeft","scrollTop"],function(t,e){i.prototype[e]=function(){var t=Array.prototype.slice.call(arguments);return this.$element[e].apply(this.$element,t)}}),n.each(["extend","inArray","isEmptyObject"],function(t,e){i[e]=n[e]}),t.adapters.push({name:"jquery",Adapter:i}),t.Adapter=i}(),function(){function t(n){return function(){var e=[],i=arguments[0];return n.isFunction(arguments[0])&&((i=n.extend({},arguments[1])).handler=arguments[0]),this.each(function(){var t=n.extend({},i,{element:this});"string"==typeof t.context&&(t.context=n(this).closest(t.context)[0]),e.push(new o(t))}),e}}var o=window.Waypoint;window.jQuery&&(window.jQuery.fn.waypoint=t(window.jQuery)),window.Zepto&&(window.Zepto.fn.waypoint=t(window.Zepto))}(),function(i){i.fn.countUp=function(t){var e=i.extend({time:2e3,delay:10},t);return this.each(function(){var c=i(this),p=e;c.waypoint(function(){c.data("counterupTo")||c.data("counterupTo",c.text());var t=0<parseInt(c.data("counter-time"))?parseInt(c.data("counter-time")):p.time,e=0<parseInt(c.data("counter-delay"))?parseInt(c.data("counter-delay")):p.delay,i=t/e,n=c.data("counterupTo"),o=[n],r=/[0-9]+,[0-9]+/.test(n);n=n.replace(/,/g,"");/^[0-9]+$/.test(n);for(var a=/^[0-9]+\.[0-9]+$/.test(n),s=a?(n.split(".")[1]||[]).length:0,l=i;1<=l;l--){var u=parseInt(Math.round(n/i*l));if(a&&(u=parseFloat(n/i*l).toFixed(s)),r)for(;/(\d+)(\d{3})/.test(u.toString());)u=u.toString().replace(/(\d+)(\d{3})/,"$1,$2");o.unshift(u)}c.data("counterup-nums",o),c.text("0");c.data("counterup-func",function(){c.text(c.data("counterup-nums").shift()),c.data("counterup-nums").length?setTimeout(c.data("counterup-func"),e):(c.data("counterup-nums"),c.data("counterup-nums",null),c.data("counterup-func",null))}),setTimeout(c.data("counterup-func"),e)},{offset:"100%",triggerOnce:!0})})},i(".counter").countUp({time:1e3,delay:5})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
